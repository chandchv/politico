# Generated by Django 5.1.3 on 2025-03-01 18:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClothingItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("shirt", "Shirt"),
                            ("trousers", "Trousers"),
                            ("casual", "Casual Wear"),
                            ("ethnic", "Ethnic Wear"),
                            ("beachwear", "Beachwear"),
                            ("accessory", "Accessory"),
                            ("sleepwear", "Sleepwear"),
                        ],
                        max_length=20,
                    ),
                ),
                ("fabric", models.CharField(max_length=50)),
                ("is_organic", models.BooleanField(default=False)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("description", models.TextField()),
                ("size_available", models.JSONField(default=list)),
                ("color", models.CharField(max_length=50)),
                ("brand", models.CharField(max_length=100)),
                (
                    "season",
                    models.CharField(
                        choices=[
                            ("summer", "Summer"),
                            ("winter", "Winter"),
                            ("all", "All Season"),
                        ],
                        max_length=20,
                    ),
                ),
                ("stock", models.IntegerField(default=0)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="clothing_items/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("phone", models.CharField(max_length=15, unique=True)),
                ("address", models.TextField()),
                ("preferences", models.TextField(blank=True, null=True)),
                ("measurements", models.JSONField(default=dict)),
                ("style_quiz_completed", models.BooleanField(default=False)),
                ("style_preferences", models.JSONField(default=dict)),
                ("shipping_address", models.TextField()),
                ("billing_address", models.TextField(blank=True, null=True)),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "payment_status",
                    models.CharField(
                        choices=[("pending", "Pending"), ("completed", "Completed")],
                        max_length=20,
                    ),
                ),
                ("transaction_id", models.CharField(max_length=100, unique=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StyleFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feedback", models.TextField()),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "clothing_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sub_app.clothingitem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stylist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("experience", models.IntegerField()),
                ("specialization", models.CharField(max_length=100)),
                ("bio", models.TextField()),
                ("availability", models.BooleanField(default=True)),
                (
                    "rating",
                    models.DecimalField(decimal_places=2, default=5.0, max_digits=3),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="stylist_profiles/"
                    ),
                ),
                (
                    "assigned_clients",
                    models.ManyToManyField(
                        related_name="assigned_stylists", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stylist_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="stylist",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="client_users",
                to="sub_app.stylist",
            ),
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField(auto_now_add=True)),
                ("renewal_date", models.DateField()),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("delivery_address", models.TextField()),
                (
                    "tracking_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("estimated_delivery", models.DateField(null=True)),
                ("feedback", models.TextField(blank=True, null=True)),
                ("rating", models.IntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("processing", "Processing"),
                            ("styling", "Styling in Progress"),
                            ("confirmed", "Confirmed"),
                            ("packed", "Packed"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("returned", "Returned"),
                        ],
                        max_length=20,
                    ),
                ),
                ("order_date", models.DateField(auto_now_add=True)),
                ("clothing_items", models.ManyToManyField(to="sub_app.clothingitem")),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sub_app.subscription",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("features", models.TextField()),
                ("is_organic", models.BooleanField(default=False)),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("basic", "₹3L Annual Plan"),
                            ("premium", "₹5L Annual Plan"),
                            ("luxury", "₹7L Annual Plan"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "delivery_frequency",
                    models.IntegerField(help_text="Delivery frequency in days"),
                ),
                ("items_per_delivery", models.IntegerField()),
                (
                    "clothing_items",
                    models.ManyToManyField(blank=True, to="sub_app.clothingitem"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="subscription",
            name="plan",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="sub_app.subscriptionplan",
            ),
        ),
        migrations.CreateModel(
            name="UserMeasurements",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("measurements", models.JSONField(default=dict)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
